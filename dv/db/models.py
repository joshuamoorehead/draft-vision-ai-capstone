from django.db import models

# Create your models here.

class Conferences(models.Model):
    conference = models.CharField(max_length=50)
    abbreviation = models.CharField(max_length=50, null=True)
    founded = models.IntegerField()
    to = models.IntegerField()
    wins = models.IntegerField()
    losses = models.IntegerField()
    winpct = models.FloatField()
    bowl_wins = models.IntegerField()
    bowl_losses = models.IntegerField()
    bowl_winpct = models.FloatField()
    SRS = models.FloatField()
    SOS = models.FloatField()
    AP_finishes = models.IntegerField()


class NCAATeams(models.Model):
    team_name = models.CharField(max_length=50)
    conference_id = models.ForeignKey(Conferences, on_delete=models.CASCADE, null=True)


class PlayerProfile(models.Model):
    name = models.CharField(max_length=50)
    position = models.CharField(max_length=5)
    school = models.CharField(max_length=50)
    schoolid = models.ForeignKey(NCAATeams, on_delete=models.CASCADE, null=True)
    nfl_team = models.CharField(max_length=50, null=True, blank=True)
    age_drafted = models.IntegerField(null=True, blank=True)
    years_ncaa = models.JSONField(null=True, blank=True)
    year_drafted = models.IntegerField(null=True, blank=True)
    draft_round = models.IntegerField(null=True, blank=True)
    draft_pick = models.IntegerField(null=True, blank=True)
    career_av = models.FloatField(null=True, blank=True)
    draft_av = models.FloatField(null=True, blank=True)
    bio = models.TextField(null=True, blank=True)




class TeamSuccess(models.Model):
    teamid = models.CharField(max_length=60)
    year = models.IntegerField(null=True, blank=True)
    AP_Finish = models.IntegerField(null=True, blank=True)
    wins = models.IntegerField(null=True, blank=True)
    losses = models.IntegerField(null=True, blank=True)
    SRS = models.FloatField(null=True, blank=True)
    SOS = models.FloatField(null=True, blank=True)
    PPG = models.FloatField(null=True, blank=True)
    Opp_PPG = models.FloatField(null=True, blank=True)


class PassingLeaders(models.Model):
    playerid = models.ForeignKey(PlayerProfile, on_delete=models.CASCADE)
    year = models.IntegerField(null=True, blank=True)
    team = models.CharField(max_length=50)
    conference = models.CharField(max_length= 50)
    games = models.IntegerField(null=True, blank=True)
    cmp = models.IntegerField(null=True, blank=True)
    att = models.IntegerField(null=True, blank=True)
    comp_pct = models.FloatField(null=True, blank=True)
    yds = models.IntegerField(null=True, blank=True)
    td = models.IntegerField(null=True, blank=True)
    td_pct = models.FloatField(null=True, blank=True)
    int = models.IntegerField(null=True, blank=True)
    int_pct = models.FloatField(null=True, blank=True)
    adj_yds = models.FloatField(null=True, blank=True)
    adj_yds_att = models.FloatField(null=True, blank=True)
    yds_carr = models.FloatField(null=True, blank=True)
    yds_g = models.FloatField(null=True, blank=True)
    ratings = models.FloatField(null=True, blank=True)
    awards = models.JSONField(null=True, blank=True)

class Coaches(models.Model):
    name = models.CharField(max_length=50)
    school = models.CharField(max_length=50)
    conference = models.ForeignKey(Conferences, on_delete=models.CASCADE)
    wins = models.IntegerField()
    losses = models.IntegerField()
    pct = models.FloatField()

class DefensivePositionalStats(models.Model):
    playerid = models.ForeignKey(PlayerProfile, on_delete=models.CASCADE)
    year = models.IntegerField()
    team = models.ForeignKey(NCAATeams, on_delete=models.CASCADE)
    conference = models.ForeignKey(Conferences, on_delete=models.CASCADE)
    TFL = models.IntegerField(null=True, blank=True)
    sacks = models.IntegerField(null=True, blank=True) 
    hur = models.IntegerField(null=True, blank=True) 
    td = models.IntegerField(null=True, blank=True)
    pd = models.IntegerField(null=True, blank=True)
    tot = models.IntegerField(null=True, blank=True)
    solo = models.IntegerField(null=True, blank=True)

class RBStats(models.Model):
    playerid = models.ForeignKey(PlayerProfile, on_delete=models.CASCADE)
    team = models.ForeignKey(NCAATeams, on_delete=models.CASCADE)
    conference = models.ForeignKey(Conferences, on_delete=models.CASCADE)
    year = models.IntegerField()
    games = models.IntegerField(null=True, blank=True)
    att = models.IntegerField(null=True, blank=True)
    yds = models.IntegerField(null=True, blank=True)
    yds_att = models.FloatField(null=True, blank=True)
    rush_td = models.IntegerField(null=True, blank=True)
    rush_ypg = models.FloatField(null=True, blank=True)
    rec = models.IntegerField(null=True, blank=True)
    rec_yds = models.IntegerField(null=True, blank=True)
    ypc = models.FloatField(null=True, blank=True)
    rec_td = models.IntegerField(null=True, blank=True)
    rec_ypg = models.FloatField(null=True, blank=True)
    snaps = models.IntegerField(null=True, blank=True)
    tot_yds = models.IntegerField(null=True, blank=True)
    tot_avg = models.FloatField(null=True, blank=True)
    tot_td = models.IntegerField(null=True, blank=True)
    awards = models.JSONField(null=True, blank=True)

class RECStats(models.Model):
    playerid = models.ForeignKey(PlayerProfile, on_delete=models.CASCADE)
    team = models.ForeignKey(NCAATeams, on_delete=models.CASCADE)
    conference = models.ForeignKey(Conferences, on_delete=models.CASCADE)
    games = models.IntegerField(null=True, blank=True)
    year = models.IntegerField()
    rec = models.IntegerField(null=True, blank=True)
    rush_yds = models.IntegerField(null=True, blank=True) 
    ypc = models.FloatField(null=True, blank=True)
    yds = models.IntegerField(null=True, blank=True)
    td = models.IntegerField(null=True, blank=True)
    ypg = models.FloatField(null=True, blank=True)
    att = models.IntegerField(null=True, blank=True)
    
    yds_att = models.FloatField(null=True, blank=True)
    rush_td = models.IntegerField(null=True, blank=True)
    rush_ypg = models.FloatField(null=True, blank=True)
    snaps = models.IntegerField(null=True, blank=True)
    tot_yds = models.IntegerField(null=True, blank=True)
    tot_avg = models.FloatField(null=True, blank=True)
    tot_td = models.IntegerField(null=True, blank=True)
    awards = models.JSONField(null=True, blank=True)

class TeamOffense(models.Model):
    teamid = models.ForeignKey(NCAATeams, on_delete=models.CASCADE)
    year = models.IntegerField()
    games = models.IntegerField(null=True, blank=True)
    pts = models.IntegerField(null=True, blank=True)
    cmp = models.IntegerField(null=True, blank=True)
    pass_att = models.IntegerField(null=True, blank=True)
    comp_pct = models.FloatField(null=True, blank=True)
    pass_yds = models.IntegerField(null=True, blank=True)
    pass_td = models.IntegerField(null=True, blank=True)
    rush_att = models.IntegerField(null=True, blank=True)
    rush_yds =models.IntegerField(null=True, blank=True)
    rush_avg = models.FloatField(null=True, blank=True)
    rush_td = models.IntegerField(null=True, blank=True)
    snaps = models.IntegerField(null=True, blank=True)
    tot_yds = models.IntegerField(null=True, blank=True)
    avg_yds = models.FloatField(null=True, blank=True)
    pass_first_downs = models.IntegerField(null=True, blank=True)
    rush_first_downs = models.IntegerField(null=True, blank=True)
    penalty_first_downs = models.IntegerField(null=True, blank=True)
    tot_first_downs = models.IntegerField(null=True, blank=True)
    penalty_count = models.IntegerField(null=True, blank=True)
    penalty_yds = models.IntegerField(null=True, blank=True)
    fumbles_lost = models.IntegerField(null=True, blank=True)
    interceptions = models.IntegerField(null=True, blank=True)
    total_turnovers = models.IntegerField(null=True, blank=True)

class TeamDefense(models.Model):
    teamid = models.ForeignKey(NCAATeams, on_delete=models.CASCADE)
    year = models.IntegerField()
    games = models.IntegerField(null=True, blank=True)
    pts = models.IntegerField(null=True, blank=True)
    cmp = models.IntegerField(null=True, blank=True)
    pass_att = models.IntegerField(null=True, blank=True)
    comp_pct = models.FloatField(null=True, blank=True)
    pass_yds = models.IntegerField(null=True, blank=True)
    pass_td = models.IntegerField(null=True, blank=True)
    rush_att = models.IntegerField(null=True, blank=True)
    rush_yds =models.IntegerField(null=True, blank=True)
    rush_avg = models.FloatField(null=True, blank=True)
    rush_td = models.IntegerField(null=True, blank=True)
    snaps = models.IntegerField(null=True, blank=True)
    tot_yds = models.IntegerField(null=True, blank=True)
    avg_yds = models.FloatField(null=True, blank=True)
    pass_first_downs = models.IntegerField(null=True, blank=True)
    rush_first_downs = models.IntegerField(null=True, blank=True)
    penalty_first_downs = models.IntegerField(null=True, blank=True)
    tot_first_downs = models.IntegerField(null=True, blank=True)
    penalty_count = models.IntegerField(null=True, blank=True)
    penalty_yds = models.IntegerField(null=True, blank=True)
    fumbles_rec = models.IntegerField(null=True, blank=True)
    interceptions = models.IntegerField(null=True, blank=True)
    total_turnovers = models.IntegerField(null=True, blank=True)

class TeamRatings(models.Model):
    team = models.ForeignKey(NCAATeams, on_delete=models.CASCADE)
    conference = models.ForeignKey(Conferences, on_delete=models.CASCADE)
    year = models.IntegerField()
    AP_Rank = models.IntegerField(null=True, blank=True)
    wins = models.IntegerField(null=True, blank=True)
    losses = models.IntegerField(null=True, blank=True)
    osrs = models.FloatField(null=True, blank=True)
    dsrs = models.FloatField(null=True, blank=True)
    ppg = models.FloatField(null=True, blank=True)
    opp_ppg = models.FloatField(null=True, blank=True)
    pass_ypa = models.FloatField(null=True, blank=True)
    opp_pass_ypa = models.FloatField(null=True, blank=True)
    rush_ypa = models.FloatField(null=True, blank=True)
    opp_rush_ypa = models.FloatField(null=True, blank=True)
    tot_ypa = models.FloatField(null=True, blank=True)
    opp_tot_ypa = models.FloatField(null=True, blank=True)

class HistoricalTeamSuccess(models.Model):
    team = models.ForeignKey(NCAATeams, on_delete=models.CASCADE)
    startyear = models.IntegerField(null=True, blank=True)
    years = models.IntegerField(null=True, blank=True)
    games = models.IntegerField(null=True, blank=True)
    wins = models.IntegerField(null=True, blank=True)
    losses = models.IntegerField(null=True, blank=True)
    pct = models.FloatField(null=True, blank=True)
    conference_wins = models.IntegerField(null=True, blank=True)
    conference_losses = models.IntegerField(null=True, blank=True)
    bowl_wins = models.IntegerField(null=True, blank=True)
    bowl_losses = models.IntegerField(null=True, blank=True)
    SRS = models.FloatField(null=True, blank=True)
    SOS = models.FloatField(null=True, blank=True)
    years_in_final_AP = models.IntegerField(null=True, blank=True)
    conference_championships = models.IntegerField(null=True, blank=True)

class Combine(models.Model):
    playerid = models.ForeignKey(PlayerProfile, on_delete=models.CASCADE)
    school = models.ForeignKey(NCAATeams, on_delete=models.CASCADE)
    height = models.CharField(max_length=10)
    weight = models.IntegerField(null=True, blank=True)
    forty = models.FloatField(null=True, blank=True)
    vertical = models.FloatField(null=True, blank=True)
    bench = models.IntegerField(null=True, blank=True)
    broadjump = models.FloatField(null=True, blank=True)
    threecone = models.FloatField(null=True, blank=True)
    shuttle = models.FloatField(null=True, blank=True)

class NFLQBTeam(models.Model):
    year = models.IntegerField()
    team = models.CharField(max_length=5)
    cmp = models.FloatField(null=True, blank=True)
    att = models.FloatField(null=True, blank=True)
    pass_yds = models.FloatField(null=True, blank=True)
    drop_pct = models.FloatField(null=True, blank=True)
    badthrow_pct = models.FloatField(null=True, blank=True)
    ontgt_pct = models.FloatField(null=True, blank=True)
    iay_pa = models.FloatField(null=True, blank=True)
    cay_pa = models.FloatField(null=True, blank=True)
    yac_cmp = models.FloatField(null=True, blank=True)
    sacks = models.FloatField(null=True, blank=True)
    pkttime = models.FloatField(null=True, blank=True)
    hits = models.FloatField(null=True, blank=True)
    prss_pct = models.FloatField(null=True, blank=True)
    offseasoninvestment = models.FloatField(null=True, blank=True)

class NFLRBTeam(models.Model):
    year = models.IntegerField()
    team = models.CharField(max_length = 5)
    att = models.FloatField(null=True, blank=True)
    yds = models.FloatField(null=True, blank=True)
    td = models.FloatField(null=True, blank=True)
    firstdowns = models.FloatField(null=True, blank=True)
    ybc_att = models.FloatField(null=True, blank=True)
    yac_att = models.FloatField(null=True, blank=True)
    att_br = models.FloatField(null=True, blank=True)
    offseasoninvestment = models.FloatField(null=True, blank=True)

class NFLWRTeam(models.Model):
    year = models.IntegerField()
    team = models.CharField(max_length = 5)
    tgt = models.FloatField(null=True, blank=True)
    rec = models.FloatField(null=True, blank=True)
    yds = models.FloatField(null=True, blank=True)
    td = models.FloatField(null=True, blank=True)
    firstdowns = models.FloatField(null=True, blank=True)
    ybc_r = models.FloatField(null=True, blank=True)
    yac_r = models.FloatField(null=True, blank=True)
    adot = models.FloatField(null=True, blank=True)
    rec_br = models.FloatField(null=True, blank=True)
    drop_pct = models.FloatField(null=True, blank=True)
    offseasoninvestment = models.FloatField(null=True, blank=True)

class NFLTETeam(models.Model): 
    year = models.IntegerField()
    team = models.CharField(max_length = 5)
    tgt = models.FloatField(null=True, blank=True)
    rec = models.FloatField(null=True, blank=True)
    pass_yds = models.FloatField(null=True, blank=True)
    pass_td = models.FloatField(null=True, blank=True)
    pass_firstdowns = models.FloatField(null=True, blank=True)
    ybc_r = models.FloatField(null=True, blank=True)
    yac_r = models.FloatField(null=True, blank=True)
    adot = models.FloatField(null=True, blank=True)
    rec_br = models.FloatField(null=True, blank=True)
    drop_pct = models.FloatField(null=True, blank=True)
    att = models.FloatField(null=True, blank=True)
    rush_yds = models.FloatField(null=True, blank=True)
    rush_td = models.FloatField(null=True, blank=True)
    rush_firstdowns = models.FloatField(null=True, blank=True)
    ybc_att = models.FloatField(null=True, blank=True)
    yac_att = models.FloatField(null=True, blank=True)
    att_br = models.FloatField(null=True, blank=True)
    offseasoninvestment = models.FloatField(null=True, blank=True)

class NFLOLTeam(models.Model): 
    year = models.IntegerField()
    team = models.CharField(max_length = 5)
    att = models.FloatField(null=True, blank=True)
    yds = models.FloatField(null=True, blank=True)
    td = models.FloatField(null=True, blank=True)
    firstdowns = models.FloatField(null=True, blank=True)
    ybc_att = models.FloatField(null=True, blank=True)
    yac_att = models.FloatField(null=True, blank=True)
    att_br = models.FloatField(null=True, blank=True)
    sacks = models.FloatField(null=True, blank=True)
    pkttime = models.FloatField(null=True, blank=True)
    hits = models.FloatField(null=True, blank=True)
    prss_pct = models.FloatField(null=True, blank=True)
    scrambles = models.FloatField(null=True, blank=True)
    offseasoninvestment = models.FloatField(null=True, blank=True)

class NFLDETeam(models.Model): 
    year = models.IntegerField()
    team = models.CharField(max_length = 5)
    hrry_pct = models.FloatField(null=True, blank=True)
    qbkd_pct = models.FloatField(null=True, blank=True)
    prss_pct = models.FloatField(null=True, blank=True)
    missed_tkl = models.FloatField(null=True, blank=True)
    qbr_against = models.FloatField(null=True, blank=True)
    sacks = models.FloatField(null=True, blank=True)
    sack_yds = models.FloatField(null=True, blank=True)
    qbhits = models.FloatField(null=True, blank=True)
    tfl = models.FloatField(null=True, blank=True)
    adj_net_yds_att = models.FloatField(null=True, blank=True)
    exp = models.FloatField(null=True, blank=True)
    rush_yds =models.FloatField(null=True, blank=True)
    rush_yds_att = models.FloatField(null=True, blank=True)
    rush_yds_g = models.FloatField(null=True, blank=True)
    rush_exp = models.FloatField(null=True, blank=True)
    offseasoninvestment = models.FloatField(null=True, blank=True)


class NFLDTTeam(models.Model): 
    year = models.IntegerField()
    team = models.CharField(max_length = 5)
    hrry_pct = models.FloatField(null=True, blank=True)
    qbkd_pct = models.FloatField(null=True, blank=True)
    prss_pct = models.FloatField(null=True, blank=True)
    missed_tkl = models.FloatField(null=True, blank=True)
    qbr_against = models.FloatField(null=True, blank=True)
    sacks = models.FloatField(null=True, blank=True)
    sack_yds = models.FloatField(null=True, blank=True)
    qbhits = models.FloatField(null=True, blank=True)
    tfl = models.FloatField(null=True, blank=True)
    avg_net_yds_att = models.FloatField(null=True, blank=True)
    exp = models.FloatField(null=True, blank=True)
    rush_yds =models.FloatField(null=True, blank=True)
    rush_yds_att = models.FloatField(null=True, blank=True)
    rush_yds_g = models.FloatField(null=True, blank=True)
    rush_exp = models.FloatField(null=True, blank=True)
    offseasoninvestment = models.FloatField(null=True, blank=True)

class NFLLBTeam(models.Model): 
    year = models.IntegerField()
    team = models.CharField(max_length = 5)
    rush_yds = models.FloatField(null=True, blank=True)
    rush_yds_att = models.FloatField(null=True, blank=True)
    rush_yds_g = models.FloatField(null=True, blank=True)
    rush_exp = models.FloatField(null=True, blank=True)
    pass_cmp_pct = models.FloatField(null=True, blank=True)
    pass_td = models.FloatField(null=True, blank=True)
    ints = models.FloatField(null=True, blank=True)
    pd = models.FloatField(null=True, blank=True)
    adj_yds_att = models.FloatField(null=True, blank=True)
    pass_yds_comp = models.FloatField(null=True, blank=True)
    pass_yds_g = models.FloatField(null=True, blank=True)
    qbr_against = models.FloatField(null=True, blank=True)
    sacks = models.FloatField(null=True, blank=True)
    sack_yds = models.FloatField(null=True, blank=True)
    qbhits = models.FloatField(null=True, blank=True)
    tfl = models.FloatField(null=True, blank=True)
    adj_net_yds_att = models.FloatField(null=True, blank=True)
    pass_exp = models.FloatField(null=True, blank=True)
    dadot = models.FloatField(null=True, blank=True)
    yac = models.FloatField(null=True, blank=True)
    hrry_pct = models.FloatField(null=True, blank=True)
    qbkd_pct = models.FloatField(null=True, blank=True)
    prss_pct = models.FloatField(null=True, blank=True)
    miss_tkl = models.FloatField(null=True, blank=True)
    offseasoninvestment = models.FloatField(null=True, blank=True)

class NFLCBTeam(models.Model): 
    year = models.IntegerField()
    team = models.CharField(max_length = 5)
    cmp_pct = models.FloatField(null=True, blank=True)
    pass_td = models.FloatField(null=True, blank=True)
    ints = models.FloatField(null=True, blank=True)
    pd = models.FloatField(null=True, blank=True)
    adj_yds_att = models.FloatField(null=True, blank=True)
    pass_yds_cmp = models.FloatField(null=True, blank=True)
    pass_yds_g = models.FloatField(null=True, blank=True)
    qbr_against = models.FloatField(null=True, blank=True)
    sacks = models.FloatField(null=True, blank=True)
    sack_yds = models.FloatField(null=True, blank=True)
    qbhits = models.FloatField(null=True, blank=True)
    tfl = models.FloatField(null=True, blank=True)
    adj_net_yds_att = models.FloatField(null=True, blank=True)
    pass_exp = models.FloatField(null=True, blank=True)
    dadot = models.FloatField(null=True, blank=True)
    yac = models.FloatField(null=True, blank=True)
    hrry_pct = models.FloatField(null=True, blank=True)
    qbkd_pct = models.FloatField(null=True, blank=True)
    prss_pct = models.FloatField(null=True, blank=True)
    missed_tkl = models.FloatField(null=True, blank=True)
    offseasoninvestment = models.FloatField(null=True, blank=True)
class NFLSTeam(models.Model): 
    year = models.IntegerField()
    team = models.CharField(max_length = 5)
    cmp_pct = models.FloatField(null=True, blank=True)
    pass_td = models.FloatField(null=True, blank=True)
    ints = models.FloatField(null=True, blank=True)
    pd = models.FloatField(null=True, blank=True)
    adj_yds_att = models.FloatField(null=True, blank=True)
    pass_yds_cmp = models.FloatField(null=True, blank=True)
    pass_yds_g = models.FloatField(null=True, blank=True)
    qbr_against = models.FloatField(null=True, blank=True)
    sacks = models.FloatField(null=True, blank=True)
    sack_yds = models.FloatField(null=True, blank=True)
    qbhits = models.FloatField(null=True, blank=True)
    tfl = models.FloatField(null=True, blank=True)
    adj_net_yds_att = models.FloatField(null=True, blank=True)
    pass_exp = models.FloatField(null=True, blank=True)
    dadot = models.FloatField(null=True, blank=True)
    yac = models.FloatField(null=True, blank=True)
    hrry_pct = models.FloatField(null=True, blank=True)
    qbkd_pct = models.FloatField(null=True, blank=True)
    prss_pct = models.FloatField(null=True, blank=True)
    missed_tkl = models.FloatField(null=True, blank=True)
    offseasoninvestment = models.FloatField(null=True, blank=True)

class TeamNeeds(models.Model):
    team = models.CharField(max_length=5)
    year = models.IntegerField()
    qb_sop = models.FloatField(null=True, blank=True)
    rb_sop = models.FloatField(null=True, blank=True)
    wr_sop = models.FloatField(null=True, blank=True)
    te_sop = models.FloatField(null=True, blank=True)
    ol_sop = models.FloatField(null=True, blank=True)
    de_sop = models.FloatField(null=True, blank=True)
    dt_sop = models.FloatField(null=True, blank=True)
    lb_sop = models.FloatField(null=True, blank=True)
    cb_sop = models.FloatField(null=True, blank=True)
    s_sop = models.FloatField(null=True, blank=True)